name: Result TS Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Validate docs generation (runs on PRs and main)
  validate-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.12.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Clean docs directory
        run: rm -rf docs

      - name: Generate documentation
        run: |
          echo "Generating TypeDoc documentation..."
          pnpm docs
          echo "Documentation generation completed"

      - name: Check docs were generated
        run: |
          if [ ! -d "docs" ] || [ -z "$(ls -A docs)" ]; then
            echo "❌ Documentation was not generated or is empty"
            ls -la
            exit 1
          fi
          echo "✅ Documentation generated successfully"
          echo "Generated files:"
          ls -la docs/

      - name: Upload docs artifacts (for PR review)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: documentation-preview
          path: docs/
          retention-days: 7

  # Deploy docs (only runs on main branch)
  deploy-docs:
    runs-on: ubuntu-latest
    needs: validate-docs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.12.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Clean docs directory
        run: rm -rf docs

      - name: Generate documentation
        run: |
          echo "Generating TypeDoc documentation for deployment..."
          pnpm docs
          echo "Documentation generation completed"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          # cname: your-domain.com # Optional: if you have a custom domain
